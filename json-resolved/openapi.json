{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Orphanet subclass status",
    "description" : "An API used to find out whether an Orphanet entry is obsolete",
    "contact" : {
      "name" : "Orphanet API Team",
      "email" : "danielmurphy@mater.ie"
    },
    "version" : "2-oas3"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/orphanet/Obsolete_subclass/2-oas3/",
    "description" : "Remote testing host"
  }, {
    "url" : "http://localhost:3000/",
    "description" : "local testing host"
  } ],
  "paths" : {
    "/orphapacket" : {
      "get" : {
        "tags" : [ "entries" ],
        "description" : "Returns all Orphanet entries from the system that the user has access to",
        "operationId" : "ListEntries",
        "parameters" : [ {
          "name" : "_limit",
          "in" : "query",
          "description" : "Maximum number of results to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of Orphanet entries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/orphapacket"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "entries" ],
        "description" : "Creates a new Orphanet entry.",
        "operationId" : "addEntry",
        "requestBody" : {
          "description" : "Entry to add to the database",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/orphapacket"
              }
            },
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/orphapacket"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added"
          },
          "404" : {
            "description" : "Could not connect"
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/orphapacket/{id}" : {
      "get" : {
        "tags" : [ "entries" ],
        "description" : "Returns ORPHApacket based on its ID",
        "operationId" : "GetEntry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of entry to return",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/orphapacket"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/orphapacket_findByORPHApacketID" : {
      "get" : {
        "tags" : [ "entries" ],
        "description" : "Returns ORPHApacket based on its ORPHApacketID",
        "operationId" : "GetByPacketID",
        "parameters" : [ {
          "name" : "ORPHApacketID",
          "in" : "query",
          "description" : "ORPHApacket ID of entry to return",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/orphapacket"
                }
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/status_findByOPRHApacketID" : {
      "get" : {
        "tags" : [ "status" ],
        "description" : "Returns the status of a disease based on a single ORPHApacketID",
        "operationId" : "getStatusByORPAHpacketID",
        "parameters" : [ {
          "name" : "ORPHApacketID",
          "in" : "query",
          "description" : "ORPHApacketID of entry to fetch",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Status"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/status/{id}" : {
      "get" : {
        "tags" : [ "status" ],
        "description" : "Returns the status of a disease based on a single id",
        "operationId" : "getStatusByID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of entry to fetch",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Status"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/status_findByStatus" : {
      "get" : {
        "tags" : [ "status" ],
        "description" : "Returns diseases based on status",
        "operationId" : "getByStatus",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status values to be filtered",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "active",
              "enum" : [ "active", "deprecated", "retired" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Status"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid status supplied"
          },
          "404" : {
            "description" : "Order not found"
          },
          "default" : {
            "description" : "unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Status" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "ORPHApacketID" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1000
          }
        }
      },
      "ErrorModel" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "orphapacket" : {
        "type" : "object",
        "properties" : {
          "ORPHApacketID" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 10
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1
          },
          "Name" : {
            "$ref" : "#/components/schemas/orphapacket_Name"
          },
          "SubClassOfList" : {
            "$ref" : "#/components/schemas/orphapacket_SubClassOfList"
          }
        }
      },
      "orphapacket_Name" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "example" : "Ataxia-telangiectasia"
          },
          "lang" : {
            "type" : "string",
            "example" : "en"
          }
        }
      },
      "orphapacket_SubClassOfList_Name" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "example" : "Oculomotor apraxia or related oculomotor disease"
          },
          "lang" : {
            "type" : "string",
            "example" : "en"
          }
        }
      },
      "orphapacket_SubClassOfList_Disorder" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "$ref" : "#/components/schemas/orphapacket_SubClassOfList_Name"
          },
          "ORPHA" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 98688
          },
          "PURL" : {
            "type" : "string",
            "example" : "http://www.orpha.net/ORDO/Orphanet_98688"
          }
        }
      },
      "orphapacket_SubClassOfList" : {
        "type" : "object",
        "properties" : {
          "Disorder" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/orphapacket_SubClassOfList_Disorder"
            }
          }
        }
      }
    }
  }
}